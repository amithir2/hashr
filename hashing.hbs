<!DOCTYPE html>
<html style="height:100%">
	<head>
		<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
		<script src="http://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
		<script src="md5.js"></script>
		<script src="string.js"></script>
		<link type = "text/css" rel = "stylesheet" href = "css/bootstrap.css" />
		
		<ul class = "nav nav-pills">
			<li style = "width: 25%;"><a href="#" id = Home data-toggle = "tab">Home</a></li>
			<li style = "width: 25%;"><a href="#" id = Admin data-toggle = "tab">Add Job</a></li>
			<li class="active" style = "width: 25%;"><a href="#" id = Hashing data-toggle = "tab">Contribute to Hashing</a></li>
		</ul>
		<title>Currently Hashing</title>
		<div class="vertical-align-middle">
		<h1 style="color:#000000; font-size:40px;">Currently Hashing</h1>
		</div>
		<div class="vertical-align-middle">
		<h1 style="color:#000000; font-size:20px;">Summary</h1>
	</head>
	<body style="font-family:'Calibri'; text-align: center; height:100%">
		
		<div class = "container" style = "
			left: 5%;
			right: 5%;
			top: 5%;
			bottom: 5%; ">
			<div id = "summary" style = "
				position: absolute;
				left: 5%;
				right: 5%;
				top: 25%;
				bottom: 60%;
				border-style: groove;
				border-color:#7D9C9F #AD235E;
				background: #ECECEC;">
			</div>
			<div id = "sb1" style="
				border-style: groove;
				border-color:#7D9C9F #AD235E;
				background: #ECECEC;
				position: absolute;
				left: 5%;
				right: 5%;
				top: 40%;
				bottom: 5%;
				overflow: hidden;
				padding: 5px;
				overflow-y: auto;
				text-align: left;
				font-family:monospace, prestige;">
			</div>
		</div>
		<script>
		$(document).on("click", "#Home", function(){
			window.location = '/';
		});
		$(document).on("click", "#Admin", function(){
			window.location = '/admin';
		});
		$(document).on("click", "#Hashing", function(){
			window.location = '/hashing';
		});
		var ip;
		var connected = 0;
		var work_avail = 1;
		$( document ).ready(function(){
			jQuery.ajaxSetup({async:false});
			//attempt to retrieve IP data
			$.get("http://jsonip.com", function(data){
				ip = data.ip;
				//begin looping the update of statistics
				stat();
				setInterval(stat,5000);
				//begin hashing
				hasher();
			}).fail(function(){
				//halt execution of IP request fails
				$('#sb1').append("Failed to receive crucual network data. Refresh to try again.<br>");
			});	
		});
		/* stat function:
		 * retrieves statistics about the hashing pool to display on the page
		 */
		function stat()
		{
			$.get( "/stats", function( stats ) {
				$('#summary').empty();
				$('#summary').append("Number of Contributing Hashers: " + stats.numHashers + "<br>");
				$('#summary').append("Hash Rate: " + stats.hashRate + "<br>");
			});
		
		}
		/* hasher function:
		 * main hashing loop
		 */
		function hasher()
		{
			//request computational load
			$.get( "/getload", function( data ) {
				//update connection status
				if (!connected)
					$('#sb1').append("Connection established<br>");
				connected = 1;
				var load = data;
				if (load.work)
				{
					//update work availability status
					work_avail = 1;
					$('#sb1').append("Processing string group \""+load.string+"\" for hash "+load.hash+"<br>");						
					var handler = new StringHandler(null);
					if (load.string !== "")
					{
						//initialize first string
						handler.curPos = handler.firstOfLength(3);
					}
					var string = handler.getNext();
					handler.completed(string);
					var unfinished = true;
					while (unfinished)
					{
						//combine workload's string with portion from string handler
						var hashStr = string.concat(load.string);
						if (hex_md5(hashStr) === load.hash)
						{
							//match found
							$('#sb1').append("Match found for hash "+load.hash+": "+hashStr+"<br>");
							//report match
							$.post( "/report", {matched: 1, matchString: hashStr, string: load.string, hash: load.hash, addr: ip},function (data) {});
							//run again
							setTimeout(hasher,0);
							return;
						}
						//increment handler string
						string = handler.getNext();
						handler.completed(string);
						//break from loop after all strings less than the maximum length have been hashed
						if (string.length > 3) unfinished = false;
					}
					//report lack of match
					$.post( "/report", {matched: 0, matchString: null, string: load.string, hash: load.hash, addr: ip},function (data) {});
					//run again
					setTimeout(hasher,0);
				}
				else
				{
					//update work status
					if (work_avail)
					    $('#sb1').append("No work available<br>");
					work_avail = 0;
					//run again after 2000ms
					setTimeout(hasher,2000);
				}
				//test = false;
			}).fail(function(){
				//run again after 2000ms
				setTimeout(hasher,2000);
				//update connection status
				if (connected)
					$('#sb1').append("Failed to connect to server!<br>");
				connected = 0;
				work_avail = 1;
				
			});
			if ( $('#sb1').prop('scrollHeight') - $('#sb1').scrollTop() - $('#sb1').height() < 35 )
			{
				$('#sb1').scrollTop( $('#sb1').prop('scrollHeight') );
			}
		}
		</script>
	</body>
</html>
